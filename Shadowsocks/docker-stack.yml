version: "3.9"

services:
  shadowsocks:
    image: teddysun/shadowsocks-libev:${SHADOWSOCKS_VERSION:-3.3.5}
    command: "/usr/bin/ss-local -c /etc/shadowsocks-libev/config.json"
    working_dir: /etc/shadowsocks-libev
    deploy:
      mode: global
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
      placement:
        constraints:
          - node.hostname != California-CentOS
          - node.platform.os == linux
    networks:
      - cluster
    ports:
      - "63820:1080"
      - "63820:1080/udp"
    configs:
      - source: ss-cliennt-config
        target: /etc/shadowsocks-libev/config.json
        mode: 0644

  ss-websocket-http:
    image: teddysun/shadowsocks-libev:${SHADOWSOCKS_VERSION:-3.3.5}
    command: "ss-server -c /etc/shadowsocks-libev/config.json > /var/log/ss-websocket-http.log 2>&1"
    working_dir: /etc/shadowsocks-libev
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.hostname == California-CentOS
    networks:
      - cluster
    ports:
      - "63821:9100"
      - "63821:9100/udp"
    configs:
      - source: ss-websocket-http-config
        target: /etc/shadowsocks-libev/config.json
        mode: 0644

  ss-websocket-https:
    image: teddysun/shadowsocks-libev:${SHADOWSOCKS_VERSION:-3.3.5}
    command: "ss-server -c /etc/shadowsocks-libev/config.json > /var/log/ss-websocket-https 2>&1"
    working_dir: /etc/shadowsocks-libev
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.hostname == California-CentOS
    networks:
      - cluster
    ports:
      - "63822:9100"
      - "63822:9100/udp"
    configs:
      - source: ss-websocket-https-config
        target: /etc/shadowsocks-libev/config.json
    secrets:
      - source: wildcard-certificate.crt
        target: /etc/ssl/wildcard-certificate.crt
      - source: wildcard-certificate.key
        target: /etc/ssl/wildcard-certificate.key

networks:
  cluster:
    name: cluster
    external: true
    driver: overlay

configs:
  ss-websocket-http-config:
    external: true
  ss-websocket-https-config:
    external: true

secrets:
  wildcard-certificate.crt:
    external: true
  wildcard-certificate.key:
    external: true