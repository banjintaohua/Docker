version: '3.9'

services:
  st2web:
    image: stackstorm/st2web:${ST2_VERSION:-3.8}
    restart: on-failure
    environment:
      ST2_AUTH_URL: ${ST2_AUTH_URL}
      ST2_API_URL: ${ST2_API_URL}
      ST2_STREAM_URL: ${ST2_STREAM_URL}
      ST2WEB_HTTPS: ${ST2WEB_HTTPS:-0}
    depends_on:
      - st2auth
      - st2api
      - st2stream
    healthcheck:
      test: ["CMD", "/st2web-healthcheck.sh"]
      interval: 30s
      timeout: 1s
      retries: 1
    volumes:
      - ./conf/scripts/st2web-healthcheck.sh:/st2web-healthcheck.sh
      # If you want to use a custom st2web config, edit ./conf/files/config.js accordingly and
      # uncomment the line below
      #- ./conf/files/config.js:/opt/stackstorm/static/webui/config.js:ro
    ports:
      - "58089:80"
      # - "${EXPOSE_HTTP}:80"
      # - "${EXPOSE_HTTPS}:443"
      # more work would be needed with certificate generate to make https work.
    networks:
      - stackstorm
      - develop

  st2makesecrets:
    image: stackstorm/st2actionrunner:${ST2_VERSION:-3.8}
    restart: on-failure
    networks:
      - stackstorm
    volumes:
      - ./conf/scripts/makesecrets.sh:/makesecrets.sh
      - stackstorm-keys:/etc/st2/keys:rw
    command: /makesecrets.sh

  st2api:
    image: stackstorm/st2api:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2makesecrets
      #- mongo
      #- rabbitmq
      #- redis
    networks:
      - stackstorm
    environment:
      ST2_AUTH_URL: ${ST2_AUTH_URL}
      ST2_API_URL: ${ST2_API_URL}
      ST2_STREAM_URL: ${ST2_STREAM_URL}
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - stackstorm-keys:/etc/st2/keys:ro
      - stackstorm-packs-configs:/opt/stackstorm/configs:rw
      - stackstorm-packs:/opt/stackstorm/packs:rw
      - ./conf/files/rbac:/opt/stackstorm/rbac:rw
      - ${ST2_PACKS_DEV}:/opt/stackstorm/packs.dev:rw

  st2stream:
    image: stackstorm/st2stream:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro

  st2scheduler:
    image: stackstorm/st2scheduler:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
      #- redis
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro

  st2workflowengine:
    image: stackstorm/st2workflowengine:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
      #- redis
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - stackstorm-keys:/etc/st2/keys:ro

  st2auth:
    image: stackstorm/st2auth:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - ./conf/files/htpasswd:/etc/st2/htpasswd:ro

  st2actionrunner:
    image: stackstorm/st2actionrunner:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
      #- redis
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - stackstorm-packs-configs:/opt/stackstorm/configs:rw
      - stackstorm-packs:/opt/stackstorm/packs:rw
      - ${ST2_PACKS_DEV}:/opt/stackstorm/packs.dev:rw
      - stackstorm-virtualenvs:/opt/stackstorm/virtualenvs:rw
      - stackstorm-ssh:/home/stanley/.ssh
      # Action runner needs access to keys since action definitions (Jinja
      # templates) can reference secrets
      - stackstorm-keys:/etc/st2/keys:ro

  st2garbagecollector:
    image: stackstorm/st2garbagecollector:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro

  st2notifier:
    image: stackstorm/st2notifier:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
      #- redis
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro

  st2rulesengine:
    image: stackstorm/st2rulesengine:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro

  st2sensorcontainer:
    image: stackstorm/st2sensorcontainer:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - stackstorm-virtualenvs:/opt/stackstorm/virtualenvs:ro
      - stackstorm-packs:/opt/stackstorm/packs:ro
      - stackstorm-packs-configs:/opt/stackstorm/configs:ro
      - ${ST2_PACKS_DEV}:/opt/stackstorm/packs.dev:ro

  st2timersengine:
    image: stackstorm/st2timersengine:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - stackstorm
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro

  st2client:
    image: stackstorm/st2actionrunner:${ST2_VERSION:-3.8}
    restart: on-failure
    depends_on:
      - st2auth
      - st2api
      - st2stream
    command: /st2client-startup.sh
    networks:
      - stackstorm
    environment:
      ST2CLIENT: 1
      ST2_AUTH_URL: ${ST2_AUTH_URL}
      ST2_API_URL: ${ST2_API_URL}
      ST2_STREAM_URL: ${ST2_STREAM_URL}
      TZ: "Asia/Shanghai"
    volumes:
      - ./conf/files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./conf/files/st2.user.conf:/etc/st2/st2.user.conf:ro
      # Technically, client container doesn't need or should have access to the
      # keys in prod setup, but here we make it available to end user for
      # testing and transparency reasons since this setup is primarily mean to
      # be used for testing and development.
      - stackstorm-keys:/etc/st2/keys:ro
      - stackstorm-packs-configs:/opt/stackstorm/configs:rw
      - stackstorm-packs:/opt/stackstorm/packs:rw
      - ./conf/files/rbac:/opt/stackstorm/rbac:rw
      - ./conf/files/st2-cli.conf:/root/.st2/config
      - ./conf/scripts/st2client-startup.sh:/st2client-startup.sh
      - ${ST2_PACKS_DEV}:/opt/stackstorm/packs.dev:rw

volumes:
  stackstorm-packs:
  stackstorm-packs-configs:
  stackstorm-keys:
  stackstorm-virtualenvs:
  stackstorm-ssh:

networks:
  develop:
    name: develop
    external: true
  stackstorm:
    driver: bridge
