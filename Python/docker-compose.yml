version: "3.9"

services:
  python:
    build:
      context: ./build
      dockerfile: Dockerfile
    image: banjintaohua/python-3.9:fastapi
    container_name: python-3.9
    working_dir: ${APP_DIR-/var/www}
    restart: "always"
    ports:
      - "58085:8080"
    networks:
      - develop
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/" ]
      interval: 30s
      timeout: 20s
      retries: 3
    #command: tail -f /dev/null
    command: [ "run" ]
    volumes:
      - ../../Python:/var/www/python:rw
    environment:
      TZ: "Asia/Shanghai"
      PYTHONPATH: ${APP_DIR}
      APP_DIR: ${APP_DIR}

  celery_worker:
    image: banjintaohua/python-3.9:fastapi
    container_name: celery_worker
    working_dir: ${CELERY_APP_DIR-/var/www}
    depends_on:
      - "python"
    restart: "no"
    networks:
      - develop
    healthcheck:
      test: [ "CMD", "celery", "-A", "task", "status" ]
      interval: 30s
      timeout: 20s
      retries: 3
    #command: tail -f /dev/null
    command: celery -A task worker -l info
    volumes:
      - ../../Python:/var/www/python:rw
    environment:
      TZ: "Asia/Shanghai"
      PYTHONPATH: ${CELERY_APP_DIR}
      APP_DIR: ${CELERY_APP_DIR}

  #celery_beat:
  #  image: banjintaohua/python-3.9:fastapi
  #  container_name: celery_beat
  #  working_dir: ${CELERY_APP_DIR-/var/www}
  #  depends_on:
  #    - "python"
  #  restart: "no"
  #  networks:
  #    - develop
  #  command: celery -A task beat -l info
  #  volumes:
  #    - ../../Python:/var/www/python:rw
  #  environment:
  #    TZ: "Asia/Shanghai"
  #    PYTHONPATH: ${CELERY_APP_DIR}
  #    APP_DIR: ${CELERY_APP_DIR}

networks:
  develop:
    external: true